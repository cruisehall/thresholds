{
    "$schema": "https://json-schema.org/draft-07/schema#",
    "definitions": {
        "OpenTelemetryMetric": {
            "type": "object"
        },
        "AwsCloudWatchSignals": {
            "type": "string",
            "description": "The name of the AWS CloudWatch signal to monitor.",
            "enum": [
                "lambda_errors",
                "lambda_latency",
                "lambda_invocations",
                "lambda_throttles",
                "lambda_concurrent_executions",
                "api_gateway_5xx_errors",
                "api_gateway_4xx_errors",
                "api_gateway_latency",
                "sqs_approximate_number_of_messages_visible",
                "sqs_approximate_age_of_oldest_message",
                "dynamodb_read_throttle_events",
                "dynamodb_write_throttle_events"
            ]
        },
        "KubernetesSignals": {
            "type": "string",
            "description": "The name of the well-known Kubernetes signal to monitor.",
            "enum": [
                "k8s_pod_cpu_usage",
                "k8s_pod_memory_usage",
                "k8s_node_cpu_usage",
                "k8s_node_memory_usage"
            ]
        },
        "ThresholdDirection": {
            "type": "object",
            "properties": {
                "above": {
                    "type": "number",
                    "description": "Trigger an alert if the signal is above this value for the specified duration."
                },
                "below": {
                    "type": "number",
                    "description": "Trigger an alert if the signal is below this value for the specified duration."
                },
                "at_or_above": {
                    "type": "number",
                    "description": "Trigger an alert if the signal is at or above this value for the specified duration."
                },
                "at_or_below": {
                    "type": "number",
                    "description": "Trigger an alert if the signal is at or below this value for the specified duration."
                }
            }
        },
        "ThresholdDuration": {
            "type": "object",
            "properties": {
                "for_any": {
                    "oneOf": [
                        {
                            "description": "Specify the duration of time over which the threshold will be evaluated in aggregate. Use the form {number}{s|m|h|d} (where 's' is seconds, 'm' is minutes, 'h' is hours, and 'd' is days).",
                            "$comment": "The 'window' property will be assumed to be 1 minute if 'for_any' is a string and 'window' is not set.",
                            "examples": [
                                "600s",
                                "10m"
                            ],
                            "pattern": "^[0-9]+[smhd]$",
                            "type": "string"
                        },
                        {
                            "type": "number",
                            "$comment": "The 'window' property MUST be set when 'for_any' is a number.",
                            "description": "Specify the number of windows over which the threshold will be evaluated in aggregate."
                        }
                    ]
                },
                "for_all": {
                    "oneOf": [
                        {
                            "description": "Specify the duration of time over which the threshold will be evaluated once *for each* 'window' (default 1 minute). Use the form {number}{s|m|h|d} (where 's' is seconds, 'm' is minutes, 'h' is hours, and 'd' is days).",
                            "$comment": "The 'window' property will be assumed to be 1 minute if 'for_all' is a string and 'window' is not set.",
                            "examples": [
                                "600s",
                                "10m"
                            ],
                            "pattern": "^[0-9]+[smhd]$",
                            "type": "string"
                        },
                        {
                            "type": "number",
                            "$comment": "The 'window' property MUST be set when 'for_all' is a number.",
                            "description": "Specify the number of windows over which the threshold will be evaluated once *for each* 'window'."
                        }
                    ]
                },
                "window": {
                    "description": "The duration of time over which the threshold will be evaluated. This is used to determine how often the threshold is checked. If not set, it defaults to 1 minute.",
                    "type": "string",
                    "pattern": "^[0-9]+[smhd]$",
                    "examples": [
                        "60s",
                        "1m"
                    ]
                }
            }
        },
        "Urgency": {
            "type": "object",
            "properties": {
                "urgent": {
                    "description": "Should the threshold trigger an 'Urgent' alarm? Assumed to be 'true' if not set.",
                    "type": "boolean"
                }
            }
        },
        "Silence": {
            "type": "object",
            "properties": {
                "silent": {
                    "description": "Should all notification channels be unsubscribed from the threshold?",
                    "type": "boolean",
                    "$comment": "This will take precedence over 'urgent' (i.e. no notification channels will be subscribed to the monitor)."
                }
            }
        },
        "ScopeFilter": {
            "type": "object"
        },
        "Signal": {
            "description": "The telemetry that expresses the state of the system to be monitored. If a well-known signal is used it can be expressed as a string. Even if not using one of the well-known signals a string can be used to describe the signal and the model will deliver a one-shot interpretation of the signal as often as needed. OpenTelemetry metrics are natively supported and can be expressed as an object.",
            "oneOf": [
                {
                    "$ref": "#/definitions/OpenTelemetryMetric"
                },
                {
                    "$ref": "#/definitions/AwsCloudWatchSignals"
                },
                {
                    "$ref": "#/definitions/KubernetesSignals"
                },
                {
                    "type": "object",
                    "properties": {
                        "query": {
                            "description": "A free-text representation of a vendor-specific query that can be used to find the signal",
                            "type": "string",
                            "$comment": "Note that signals defined as a free-text query might not be portable between vendors."
                        }
                    }
                }
            ]
        },
        "Spec": {
            "description": "Spec",
            "type": "object",
            "properties": {
                "signal": {
                    "$ref": "#/definitions/Signal"
                },
                "scope": {
                    "type": "object",
                    "required": [
                        "include"
                    ],
                    "properties": {
                        "include": {
                            "description": "List of filters to define for which resources the `signal` will be measured against the `thresholds`; will be combined in `OR` fashion.",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ScopeFilter"
                            }
                        },
                        "exclude": {
                            "description": "List of filters to define for which resources the `signal` will *not* be measured against the `thresholds`; will be combined in `OR` fashion.",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ScopeFilter"
                            }
                        }
                    }
                },
                "thresholds": {
                    "description": "List of thresholds to configure monitors for the signal.",
                    "type": "array",
                    "items": {
                        "allOf": [
                            {
                                "$ref": "#/definitions/ThresholdDirection"
                            },
                            {
                                "$ref": "#/definitions/ThresholdDuration"
                            },
                            {
                                "$ref": "#/definitions/Urgency"
                            },
                            {
                                "$ref": "#/definitions/Silence"
                            }
                        ]
                    }
                }
            }
        },
        "Metadata": {
            "description": "Metadata",
            "type": "object",
            "properties": {
                "annotations": {
                    "type": "object"
                },
                "labels": {
                    "type": "object"
                },
                "title": {
                    "description": "Describes the significance of a breached threshold. Will be applied to the title of the monitor created for each threshold (might get suffixed with threshold configs)",
                    "type": "string"
                }
            }
        }
    },
    "type": "object",
    "required": [
        "spec"
    ],
    "properties": {
        "spec": {
            "$ref": "#/definitions/Spec"
        },
        "metadata": {
            "$ref": "#/definitions/Metadata"
        }
    }
}